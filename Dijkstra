#include <iostream>
#include <stdio.h>
#include <queue>
#include <vector>
using namespace std;
#define INF 100000000
typedef pair<int,int> wr;
vector <wr> a[100000];
int n, x, y, g, h, k, d[1000000];

void dij()
{
    priority_queue <wr, vector<wr>, greater<wr> > pq;
    int u, v, du, uv;

    for (int i = 1; i <= n; i ++)
        d[i] = INF;
    d[1] = 0;
    pq.push(wr(0, 1));

    while (pq.size()){
        u = pq.top().second;
        du = pq.top().first;
        pq.pop();
        if (du != d[u]){    // d[u] == INF
            continue;
        }

        for (int i = 0; v = a[u][i].second; i ++){
            uv = a[u][i].first;
            if (d[v] > du + uv){
                d[v] = du + uv;
                pq.push(wr(d[v], v));
            }
        }
    }
}

void Input()
{
    cin >> n;
    cin >> x >> y;
    while (!cin.eof()){
        cin >> g >> h >> k;
        a[g].push_back(wr(k, h));
        a[h].push_back(wr(k, g));
    }
    for (int i = 1; i <= n; i ++){
        a[i].push_back(wr(0,0));
    }
}

void Output()
{
    cout << d[y] << endl;
}

int main()
{
    freopen("DUONGDI.inp", "r", stdin);
    freopen("DUONGDI.out", "w", stdout);

    Input();
    dij();
    Output();
}
