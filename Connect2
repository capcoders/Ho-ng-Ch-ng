//////////////////////////////
/// use Warshall algorithm
//////////////////////////////

#include <iostream>
#include <stdio.h>
using namespace std;
long long n, m, count = 0;
bool A[10000][10000], Visit[10000];

void Input()
{
    long long u, v;
    cin >> n >> m;
    for (int u = 1; u <= n; u ++){
        A[u][u] = true;
    }
    for (int i = 1; i <= n; i ++){
        cin >> u >> v;
        A[u][v] = true;
        A[v][u] = true;
    }
}

void Process()
{
    for (int k = 1; k <= n; k ++){
        for (int u = 1; u <= n; u ++){
            for (int v = 1; v <= n; v ++){
                if (A[k][u] == true && A[k][v] == true){
                    A[u][v] = true;
                    A[v][u] = true;
                }
            }
        }
    }
}

void Output()
{
    for (int k = 1; k <= n; k ++){
        if (Visit[k] == false){
            count ++;
            cout << "Connected Component " << count << ":" << endl;
            for (int u = 1; u <= n; u ++){
                if (A[k][u] == true){
                    Visit[u] = true;
                    cout << u << " ";
                }
            }
        cout << endl;
        }
    }
}

int main()
{
    freopen("connect2.inp", "r", stdin);
    freopen("connect2.out", "w", stdout);

    Input();
    Process();
    Output();
}
